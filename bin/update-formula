#!/usr/bin/env bash

set -eo pipefail

# where am i?
me="$0"
me_home=$(dirname "$0")
me_home=$(cd "$me_home" && pwd)

# this repo
repo_home=$(cd "$me_home/.." && pwd)

# arguments
while [[ $# -gt 0 ]]; do
  key="$1"
  case $key in
      -p|--product)
        product="$2"
        shift;;
      -v|--version)
        release_version="$2"
        shift;;
      -b|--binary)
        binary_path="$2"
        shift;;
      -u|--url)
	echo "*** Do not use -u, --url anymore; use --url:amd64, --url:arm64 instead" && exit 1
        shift;;
      --url:amd64)
        artifact_url_amd64="$2"
        shift;;
      --url:arm64)
        artifact_url_arm64="$2"
        shift;;
      -w|--work)
        retain_work="true"
        ;;
      *)
        break;;
  esac
  shift # past argument or value
done

# make sure we have valid product
if [ -z "$product" ]; then
  echo "No product specified (use: -p <product>)"
  exit -1
fi

# make sure we have valid state
if [ -z "$release_version" ]; then
  echo "No version specified (use: -v <version>)"
  exit -1
fi

# make sure we have an artifact url
if [ -z "$artifact_url_amd64" ]; then
  echo "No x86_64 artifact URL provided (use: --url:amd64 <url>)"
  exit -1
fi

# make sure we have an artifact url
if [ -z "$artifact_url_arm64" ]; then
  echo "No Arm64 artifact URL provided (use: --url:arm64 <url>)"
  exit -1
fi

workdir=$(mktemp -d /tmp/formula-${product}.XXXXXX) || exit 1
if [ ! -z "$retain_work" ]; then
  echo "--> ${workdir}"
else
  trap "(rm -r ${workdir})" EXIT
fi

formula_path="${repo_home}/Formula/${product}.rb"
class_name=$(echo -n "$product" | tr -cd '[:alnum:]_' | awk '{print toupper(substr($0,0,1))tolower(substr($0,2))}')

if [ -z "$binary_path" ]; then
	binary_path="bin/${product}"
fi

for target in amd64 arm64; do
  archive_url_target="artifact_url_$target"
  archive_name=$(basename "${!archive_url_target}")
  archive_path="${workdir}/${archive_name}"

  curl -sSL -o "$archive_path" "${!archive_url_target}"
  
  sha256=$(openssl dgst -sha256 "${archive_path}")
  sha256=${sha256#* }

  declare sha256_$target="$sha256"
done

cat <<FORMULA> "$formula_path"

class ${class_name} < Formula
  homepage "https://github.com/bww/${product}"
  version "${release_version}"
  
  on_arm do
    url "${artifact_url_arm64}"
    sha256 "${sha256_arm64}"
  end
  on_intel do
    url "${artifact_url_amd64}"
    sha256 "${sha256_amd64}"
  end
  
  def install
    bin.install "${binary_path}"
  end
end
Formula

FORMULA
